{% extends 'base.html.twig' %}

{% block title %}
	Paiement
{% endblock %}

{% block body %}
	{% block flash_messages %}
		{{ include('@EasyAdmin/flash_messages.html.twig') }}
	{% endblock flash_messages %}
	<h1 class="mb-lg-5 mb-4 text-center">Paiement</h1>

	<div id="paypal-boutons" class="w-25 mx-auto"></div>
	<div class="text-center my-5">
		<a class="btn shop mx-5" href="{{ path('cart_finish') }}">Paiement en direct</a>
		<a class="btn shop mx-5" href="{{ path('cart_finish') }}">Retour à l'accueil</a>
	</div>
	<script src="https://www.paypal.com/sdk/js?client-id=AayGSAcaCnzvCpJ9AER4eRC1BGbD8J_MuDcFcGX1RFzsCPHA4GPyOslMMij6JJKvSJ6x-L9up218vl7V&locale=fr_FR&buyer-country=FR&currency=EUR&vault=true"></script>
    <script>
        // 2. Afficher le bouton PayPal
        paypal.Buttons({

            // 3. Configurer la transaction
            createOrder : function (data, actions) {

                // Les produits à payer avec leurs details
                const produits = [
                    {
                        name : "{{ dataCart[0].product.name }}",
                        description : "{{ dataCart[0].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[0].product.price }}, currency_code : "EUR" }
                    },
                    {% if dataCart[1] is defined %}
                    {
                        name : "{{ dataCart[1].product.name }}",
                        description : "{{ dataCart[1].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[1].product.price }}, currency_code : "EUR" }
                    },
                    {% endif %}
                    {% if dataCart[2] is defined %}
                    {
                        name : "{{ dataCart[2].product.name }}",
                        description : "{{ dataCart[2].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[2].product.price }}, currency_code : "EUR" }
                    },
                    {% endif %}
                    {% if dataCart[3] is defined %}
                    {
                        name : "{{ dataCart[3].product.name }}",
                        description : "{{ dataCart[3].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[3].product.price }}, currency_code : "EUR" }
                    },
                    {% endif %}
                    {% if dataCart[4] is defined %}
                    {
                        name : "{{ dataCart[4].product.name }}",
                        description : "{{ dataCart[4].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[4].product.price }}, currency_code : "EUR" }
                    },
                    {% endif %}
                    {% if dataCart[5] is defined %}
                    {
                        name : "{{ dataCart[5].product.name }}",
                        description : "{{ dataCart[5].product.description }}",
                        quantity : 1,
                        unit_amount : { value : {{ dataCart[5].product.price }}, currency_code : "EUR" }
                    },
                    {% endif %}
                    // Frais de port offert si 2 articles ou plus
                    {% if total < 50 %}
                    {
                        name : "Frais de Port",
                        description : "Livraison à domicile",
                        quantity : 1,
                        unit_amount : { value : 2.89, currency_code : "EUR" }
                    }
                    {% endif %}
                ];
                // Le total des produits
                var total_amount = produits.reduce(function (total, product) {
                    return total + product.unit_amount.value * product.quantity;
                }, 0);

                // La transaction
                return actions.order.create({
                    purchase_units : [{
                        items : produits,
                        amount : {
                            value : total_amount,
                            currency_code : "EUR",
                            breakdown : {
                                item_total : { value : total_amount, currency_code : "EUR" }
                            }
                        }
                    }]
                });
            },

            // 4. Capturer la transaction après l'approbation de l'utilisateur
            onApprove : function (data, actions) {
                return actions.order.capture().then(function(details) {

                    // On affiche un message de succès
                    alert(details.payer.name.given_name + ' ' + details.payer.name.surname + ', votre transaction est effectuée. Je vous contacterez dans les plus bref délai pour vous communiquer la date de livraison.');

                });
            },

            // 5. Annuler la transaction
            onCancel : function (data) {
                alert("Transaction annulée !");
            }

        }).render("#paypal-boutons");

    </script>
{% endblock %}
